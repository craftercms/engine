<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2023 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath:crafter/engine/mode/serverless/deployment-events-context.xml" />

    <bean class="org.craftercms.commons.spring.ListMergingPostProcessor">
        <property name="order" value="0" />
        <property name="beanName" value="crafter.properties" />
        <property name="propertyName" value="locations" />
        <property name="additionalElements">
            <list>
                <value>classpath:crafter/engine/mode/serverless/s3/server-config.properties</value>
            </list>
        </property>
    </bean>

    <!-- AWS S3 client builder -->
    <bean id="crafter.s3ClientBuilder" class="org.craftercms.engine.store.s3.util.S3ClientBuilder">
        <constructor-arg name="endpoint" value="${crafter.engine.s3.endpoint:}"/>
        <constructor-arg name="region" value="${crafter.engine.s3.region:}"/>
        <constructor-arg name="accessKey" value="${crafter.engine.s3.accessKey:}"/>
        <constructor-arg name="secretKey" value="${crafter.engine.s3.secretKey:}"/>
        <constructor-arg name="pathStyle" value="${crafter.engine.s3.pathStyle:false}"/>
    </bean>

    <!-- AWS S3 Site List Resolver -->
    <bean id="crafter.siteListResolver" class="org.craftercms.engine.store.s3.S3SiteListResolver">
        <property name="s3Uri" value="${crafter.engine.site.default.rootFolder.path}"/>
        <property name="clientBuilder" ref="crafter.s3ClientBuilder"/>
    </bean>

    <bean id="crafter.siteContextManager" class="org.craftercms.engine.service.context.SiteContextManager">
        <property name="fallbackContextFactory" ref="crafter.fallbackSiteContextFactory"/>
        <property name="contextFactory" ref="crafter.siteContextFactory"/>
        <property name="siteListResolver" ref="crafter.siteListResolver"/>
        <property name="entitlementValidator" ref="crafter.entitlementValidator"/>
        <property name="waitForContextInit" value="${crafter.engine.site.context.waitForInit}"/>
        <property name="jobThreadPoolExecutor" ref="crafter.jobThreadPoolExecutor"/>
        <property name="defaultSiteName" value="${crafter.engine.site.default.name}"/>
        <property name="contextBuildRetryMaxCount" value="${crafter.engine.site.context.build.retry.maxCount}"/>
        <property name="contextBuildRetryWaitTimeBase" value="${crafter.engine.site.context.build.retry.waitTimeBase}"/>
        <property name="contextBuildRetryWaitTimeMultiplier" value="${crafter.engine.site.context.build.retry.waitTimeMultiplier}"/>
        <property name="modePreview" value="${crafter.engine.preview}"/>
        <property name="watcherPaths" value="${crafter.engine.watcher.paths}"/>
        <property name="watcherIgnorePaths" value="${crafter.engine.watcher.ignorePaths}"/>
        <property name="watcherCounterLimit" value="${crafter.engine.watcher.counter.limit}"/>
        <property name="watcherIntervalPeriod" value="${crafter.engine.watcher.interval.period}"/>
    </bean>

    <!-- AWS S3 Content Store Adapter -->

    <bean id="crafter.s3ContentStoreAdapter" class="org.craftercms.engine.store.s3.S3ContentStoreAdapter">
        <property name="cacheTemplate" ref="crafter.cacheTemplate"/>
        <property name="metadataFileExtension" value="${crafter.core.store.metadataFile.extension}"/>
        <property name="descriptorFileExtension" value="${crafter.core.store.descriptorFile.extension}"/>
        <property name="pathValidator">
            <bean class="org.craftercms.commons.validation.validators.impl.SecurePathValidator">
            </bean>
        </property>
        <property name="clientBuilder" ref="crafter.s3ClientBuilder"/>
    </bean>

    <bean id="crafter.contentStoreAdapter.s3"
          class="org.craftercms.engine.util.store.decorators.ContentStoreAdapterDecoratorChainFactoryBean">
        <property name="storeAdapter" ref="crafter.s3ContentStoreAdapter"/>
        <property name="decorators">
            <list>
                <ref bean="crafter.cacheWarmingContentStoreAdapterDecorator"/>
                <ref bean="crafter.targetedContentStoreAdapterDecorator"/>
            </list>
        </property>
    </bean>

    <bean id="crafter.contentStoreAdapterRegistry" class="org.craftercms.core.store.impl.ContentStoreAdapterRegistryImpl" >
        <property name="adapters">
            <map>
                <entry key="filesystem" value-ref="crafter.contentStoreAdapter.filesystem"/>
                <entry key="s3" value-ref="crafter.contentStoreAdapter.s3"/>
            </map>
        </property>
    </bean>

</beans>
