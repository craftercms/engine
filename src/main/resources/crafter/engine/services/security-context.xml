<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2023 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Spring Security Integration -->

    <!-- Path Matchers -->
    <bean id="crafter.forbiddenUrlsRequestMatcher" class="org.craftercms.engine.util.spring.security.matcher.OrAntPathRequestMatcher">
        <constructor-arg value="${crafter.security.forbidden.urls}"/>
    </bean>

    <!-- Login Handlers -->

    <bean id="crafter.loginSuccessHandler"
          class="org.craftercms.engine.util.spring.security.ConfigAwareAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="${crafter.security.login.success.url}"/>
        <property name="alwaysUseDefaultTargetUrl" value="${crafter.security.login.success.alwaysUseDefaultUrl}"/>
        <property name="requestCache" ref="crafter.requestCache"/>
    </bean>

    <bean id="crafter.loginFailureHandler"
          class="org.craftercms.engine.util.spring.security.ConfigAwareAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="${crafter.security.login.failure.url}"/>
    </bean>

    <!-- Logout Handlers -->

    <bean id="crafter.logoutSuccessHandler"
          class="org.craftercms.engine.util.spring.security.ConfigAwareLogoutSuccessHandler">
        <property name="defaultTargetUrl" value="${crafter.security.logout.success.url}"/>
    </bean>

    <bean name="crafter.logoutHandler"
          class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>

    <util:list id="crafter.logoutHandlers">
        <ref bean="crafter.profileLogoutHandler"/>
        <ref bean="crafter.profileRememberMeServices"/>
        <ref bean="crafter.logoutHandler"/>
    </util:list>

    <!-- Access Denied Handlers -->

    <bean id="crafter.accessDeniedHandler"
          class="org.craftercms.engine.util.spring.security.ConfigAwareAccessDeniedHandler"/>

    <!-- Entry Points -->
    <bean id="crafter.authenticationEntryPoint"
          class="org.craftercms.engine.util.spring.security.ConfigAwareLoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="${crafter.security.login.form.url}"/>
    </bean>

    <!-- User Details -->
    <bean id="crafter.preAuthenticatedUserDetailsService"
          class="org.craftercms.engine.util.spring.security.DefaultPreAuthenticatedUserDetailsService"/>

    <bean id="crafter.defaultDetailsSource"
          class="org.craftercms.engine.util.spring.security.DefaultAuthenticationDetailsSource"/>

    <!-- Authentication -->

    <util:list id="crafter.authenticationProviders">
        <ref bean="crafter.profileAuthenticationProvider"/>
        <ref bean="crafter.rememberMeAuthenticationProvider"/>
        <ref bean="crafter.anonymousAuthenticationProvider"/>
    </util:list>

    <bean id="crafter.authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg index="0" ref="crafter.authenticationProviders"/>
    </bean>

    <bean id="crafter.rememberMeAuthenticationProvider"
          class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg index="0" value="${crafter.security.rememberme.key}"/>
    </bean>

    <bean id="crafter.anonymousAuthenticationProvider"
          class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <constructor-arg index="0" value="${crafter.security.anonymous.token}"/>
    </bean>

    <!-- Authorization -->

    <util:list id="crafter.accessDecisionVoters">
        <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
        <bean class="org.springframework.security.access.vote.RoleVoter"/>
        <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
    </util:list>
    
    <bean id="crafter.accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg index="0" ref="crafter.accessDecisionVoters"/>
    </bean>

    <bean id="crafter.securityMetadataSource"
          class="org.craftercms.engine.util.spring.security.ConfigAwareSecurityMetadataSource">
        <constructor-arg name="cacheTemplate" ref="crafter.cacheTemplate"/>
    </bean>

    <!-- Session Management -->

    <bean id="crafter.securityContextRepository"
          class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
        <property name="disableUrlRewriting" value="true"/>
    </bean>

    <bean id="crafter.sessionAuthenticationStrategy"
          class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>

    <bean id="crafter.requestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache"/>

    <!-- Remember Me -->

    <bean id="crafter.profileRememberMeServices"
          class="org.craftercms.engine.util.spring.security.profile.ProfileRememberMeServices">
        <constructor-arg name="key" value="${crafter.security.rememberme.key}"/>
        <constructor-arg name="userDetailsService" ref="crafter.profileUserDetailsService"/>
        <constructor-arg name="authenticationService" ref="crafter.authenticationServiceRestClient"/>
    </bean>

    <!-- Profile Integration   -->

    <bean id="crafter.profileLogoutHandler"
          class="org.craftercms.engine.util.spring.security.profile.ProfileLogoutHandler">
        <constructor-arg name="profileAuthenticationManager" ref="crafter.profileAuthenticationManager"/>
    </bean>

    <bean id="crafter.profileAuthenticationProvider"
          class="org.craftercms.engine.util.spring.security.profile.ProfileAuthenticationProvider">
        <constructor-arg name="tenantsResolver" ref="crafter.tenantsResolver"/>
        <constructor-arg name="authenticationManager" ref="crafter.profileAuthenticationManager"/>
    </bean>

    <bean id="crafter.profileUserDetailsService"
          class="org.craftercms.engine.util.spring.security.profile.ProfileUserDetailsService">
        <constructor-arg name="tenantsResolver" ref="crafter.tenantsResolver"/>
        <constructor-arg name="profileService" ref="crafter.profileServiceRestClient"/>
    </bean>

    <!-- Security Filters -->

    <bean id="crafter.securityContextFilter"
          class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <constructor-arg index="0" ref="crafter.securityContextRepository" />
    </bean>

    <bean id="crafter.logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg index="0" ref="crafter.logoutSuccessHandler"/>
        <constructor-arg index="1" ref="crafter.logoutHandlers"/>
        <property name="filterProcessesUrl" value="${crafter.security.logout.url}"/>
    </bean>

    <bean id="crafter.formLoginFilter"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="filterProcessesUrl" value="${crafter.security.login.url}"/>
        <property name="authenticationManager" ref="crafter.authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="crafter.loginSuccessHandler"/>
        <property name="authenticationFailureHandler" ref="crafter.loginFailureHandler"/>
        <property name="sessionAuthenticationStrategy" ref="crafter.sessionAuthenticationStrategy"/>
        <property name="rememberMeServices" ref="crafter.profileRememberMeServices"/>
    </bean>

    <bean id="crafter.rememberMeFilter"
          class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <constructor-arg index="0" ref="crafter.authenticationManager" />
        <constructor-arg index="1" ref="crafter.profileRememberMeServices"/>
    </bean>

    <bean id="crafter.requestCacheFilter"
          class="org.springframework.security.web.savedrequest.RequestCacheAwareFilter">
        <constructor-arg index="0" ref="crafter.requestCache"/>
    </bean>

    <bean id="crafter.servletApiFilter"
          class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter">
        <property name="authenticationEntryPoint" ref="crafter.authenticationEntryPoint"/>
        <property name="authenticationManager" ref="crafter.authenticationManager"/>
        <property name="logoutHandlers" ref="crafter.logoutHandlers"/>
    </bean>

    <bean id="crafter.sessionManagementFilter"
          class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg index="0" ref="crafter.securityContextRepository" />
    </bean>

    <bean id="crafter.exceptionTranslationFilter"
          class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg index="0" ref="crafter.authenticationEntryPoint"/>
        <constructor-arg index="1" ref="crafter.requestCache"/>
        <property name="accessDeniedHandler" ref="crafter.accessDeniedHandler"/>
    </bean>

    <bean id="crafter.filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="securityMetadataSource" ref="crafter.securityMetadataSource"/>
        <property name="authenticationManager" ref="crafter.authenticationManager"/>
        <property name="accessDecisionManager" ref="crafter.accessDecisionManager"/>
    </bean>

    <bean id="crafter.anonymousFilter"
          class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <constructor-arg index="0" value="${crafter.security.anonymous.token}"/>
    </bean>

    <bean id="crafter.forbiddenUrlsFilter"
          class="org.craftercms.engine.util.spring.security.ForbiddenUrlsFilter">
        <constructor-arg index="0" ref="crafter.forbiddenUrlsRequestMatcher"/>
    </bean>

    <util:list id="crafter.securityFilters">
        <ref bean="crafter.securityContextFilter"/>
        <ref bean="crafter.logoutFilter"/>
        <ref bean="crafter.formLoginFilter"/>
        <ref bean="crafter.rememberMeFilter"/>
        <ref bean="crafter.anonymousFilter"/>
        <ref bean="crafter.requestCacheFilter"/>
        <ref bean="crafter.servletApiFilter"/>
        <ref bean="crafter.sessionManagementFilter"/>
        <ref bean="crafter.exceptionTranslationFilter"/>
        <ref bean="crafter.filterSecurityInterceptor"/>
        <ref bean="crafter.forbiddenUrlsFilter"/>
    </util:list>

    <!-- Security Filter Chains -->

    <bean id="crafter.securityFilterChain"
          class="org.craftercms.engine.util.spring.security.DefaultSecurityFilterChain">
        <constructor-arg name="securityEnabled" value="${crafter.security.enabled}"/>
        <constructor-arg name="urlsToExclude" value="${crafter.security.urlsToExclude}"/>
        <constructor-arg name="filters" ref="crafter.securityFilters"/>
    </bean>

    <bean id="crafter.securityFilter" class="org.springframework.security.web.FilterChainProxy">
        <constructor-arg index="0" ref="crafter.securityFilterChain"/>
    </bean>

    <!-- Secure Headers -->

    <util:list id="crafter.secureHeaderWriters">
        <bean class="org.springframework.security.web.header.writers.CacheControlHeadersWriter"/>
        <bean class="org.springframework.security.web.header.writers.HstsHeaderWriter"/>
        <bean class="org.springframework.security.web.header.writers.XXssProtectionHeaderWriter"/>
        <bean class="org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter">
            <constructor-arg index="0" value="${crafter.security.headers.xframeOptions.value}"/>
        </bean>
        <bean class="org.springframework.security.web.header.writers.XContentTypeOptionsHeaderWriter"/>
    </util:list>

    <!-- Filter separate from the securityFilter since we want to run it in all requests -->
    <bean id="crafter.secureHeaderWriterFilter"
          class="org.craftercms.engine.util.spring.security.ConditionalHeaderWriterFilter">
        <constructor-arg name="enabled" value="${crafter.security.headers.enabled}"/>
        <constructor-arg name="headerWriters" ref="crafter.secureHeaderWriters"/>
    </bean>

    <!-- Include additional security contexts -->
    <import resource="classpath*:crafter/engine/security/*-context.xml"/>

</beans>
